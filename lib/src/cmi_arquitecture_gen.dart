import 'dart:io';

import 'package:arquitecture_cmi_generators/src/file_gen.dart';
//generators

class CmiArchitectureGen {
  
  Future<void> generate() async {
    const String BarrelFileContent = """
// This file was generated by a generator for the CMI architecture.

// This is a barrel file used to manage imports.
//Example:
// export 'book/book_creen.dart';
// export 'book/booklist_view.dart';
// export 'core/**.dart';
//...

// Do not delete this file.
""";
const String contentApp="""
import 'package:flutter/material.dart';

class App extends StatelessWidget {
  const App({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Material App',
      home: Scaffold(
        appBar: AppBar(
          title: const Text('Material App Bar'),
        ),
        body: const Center(
          child: Text('Hello World'),
        ),
      ),
    );
  }
}
""";

    final String lib = 'lib';
    //Layer-Configs
    final String layerConfigs = '$lib/configs';
    // Generate Configs enruter
    await generateFile(
        path: '$layerConfigs',
        fileName: 'configs.dart',
        fileContent: BarrelFileContent);
    //Configs-modules
    final Directory configsConstants= await Directory('$layerConfigs/constants').create(recursive: true);
    final Directory configsTheme= await Directory('$layerConfigs/theme').create(recursive: true);
    final Directory configsRouter= await Directory('$layerConfigs/router').create(recursive: true);
    final Directory configsHelpers= await Directory('$layerConfigs/helpers').create(recursive: true);
    final Directory configsColors= await Directory('$layerConfigs/colors').create(recursive: true);
    final Directory configsNotifications= await Directory('$layerConfigs/notifications').create(recursive: true);
    final Directory configsLanguages= await Directory('$layerConfigs/languages').create(recursive: true);
    final Directory configsTypes= await Directory('$layerConfigs/types').create(recursive: true);
    //Configs-modules-enruter
    await generateFile(
        path: configsConstants.path,
        fileName: 'constants_configs.dart',
        fileContent: BarrelFileContent);
        await generateFile(
        path: configsTheme.path,
        fileName: 'theme_configs.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: configsRouter.path,
        fileName: 'router_configs.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: configsHelpers.path,
        fileName: 'helpers_configs.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: configsColors.path,
        fileName: 'colors_configs.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: configsNotifications.path,
        fileName: 'notifications_configs.dart',
        fileContent: BarrelFileContent);
        await generateFile(
        path: configsLanguages.path,
        fileName: 'Languages_configs.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: configsTypes.path,
        fileName: 'types_configs.dart',
        fileContent: BarrelFileContent);


    //Layer-Core
    final String core = '$lib/core';
    // Generate Core enruter
    await generateFile(
        path: core,
        fileName: 'core.dart',
        fileContent: BarrelFileContent);
    //Core-modules
    final String coreRules = '$core/rules';
    final String coreUses = '$core/uses';
    //Core-modules-enruter
     await generateFile(
        path: coreRules,
        fileName: 'rules_core.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: coreUses,
        fileName: 'uses_core.dart',
        fileContent: BarrelFileContent);
    //Core-modules-container(s)
    // Core-module-rules-container(s)
    final Directory coreRulesData= await Directory('$coreRules/data').create(recursive: true);
    final Directory coreRulesServices= await Directory('$coreRules/services').create(recursive: true);
    final Directory coreRulesConsumers= await Directory('$coreRules/consumers').create(recursive: true);
    //Core-module-rules-container(s)-enruter
    await generateFile(
        path: coreRulesData.path,
        fileName: 'data_rules.dart',
        fileContent: BarrelFileContent);
        await generateFile(
        path: coreRulesServices.path,
        fileName: 'services_rules.dart',
        fileContent: BarrelFileContent);
        await generateFile(
        path: coreRulesConsumers.path,
        fileName: 'consumers_rules.dart',
        fileContent: BarrelFileContent);
    // Core-module-uses-container(s)
    final Directory coreUsesAdapters= await Directory('$coreUses/adapters').create(recursive: true);
    final Directory coreUsesServices= await Directory('$coreUses/services').create(recursive: true);
    final Directory coreUsesOrigins= await Directory('$coreUses/origins').create(recursive: true);
    final Directory coreUsesConsumers= await Directory('$coreUses/consumers').create(recursive: true);
    //Core-module-uses-container(s)-enruter
    await generateFile(
        path: coreUsesAdapters.path,
        fileName: 'adapters_uses.dart',
        fileContent: BarrelFileContent);
        await generateFile(
        path: coreUsesServices.path,
        fileName: 'services_uses.dart',
        fileContent: BarrelFileContent);
        await generateFile(
        path: coreUsesOrigins.path,
        fileName: 'origins_uses.dart',
        fileContent: BarrelFileContent);
        await generateFile(
        path: coreUsesConsumers.path,
        fileName: 'consumers_uses.dart',
        fileContent: BarrelFileContent);





    //Layer-UI
    final String layerUI = '$lib/ui';
    // Generate UI enruter
    await generateFile(
        path: '$layerUI',
        fileName: 'ui.dart',
        fileContent: BarrelFileContent);
    //UI-modules
    final Directory uiApp= await Directory('$layerUI/app').create(recursive: true);
    final Directory uiLayouts= await Directory('$layerUI/pages').create(recursive: true);
    final Directory uiShared= await Directory('$layerUI/shared').create(recursive: true);
    //Configs-modules-enruter
    await generateFile(
        path: uiApp.path,
        fileName: 'app.dart',
        fileContent: contentApp);
    await generateFile(
        path: uiLayouts.path,
        fileName: 'layouts.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: uiShared.path,
        fileName: 'shared.dart',
        fileContent: BarrelFileContent);
    // UI-module-Layouts-shared-container(s)
    final Directory uiSharedComponents= await Directory('${uiShared.path}/components').create(recursive: true);
    final Directory uiSharedDialogs= await Directory('${uiShared.path}/dialgs').create(recursive: true);
    final Directory uiSharedLogic= await Directory('${uiShared.path}/components').create(recursive: true);
    final Directory uiSharedNotifications= await Directory('${uiShared.path}/notifications').create(recursive: true);
    // UI-module-Layouts-shared-container(s)-enruter
    await generateFile(
        path: uiSharedComponents.path,
        fileName: 'components_shared.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: uiSharedDialogs.path,
        fileName: 'dialogs_shared.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: uiSharedLogic.path,
        fileName: 'logic_shared.dart',
        fileContent: BarrelFileContent);
    await generateFile(
        path: uiSharedNotifications.path,
        fileName: 'notifications_shared.dart',
        fileContent: BarrelFileContent);

//Edit main
final String contentMain="""
import 'package:flutter/material.dart';
import '$layerUI/ui.dart';
void main() => runApp(const App());
""";
await generateFile(
        path: lib,
        fileName: 'main.dart',
        fileContent: BarrelFileContent);
    //generator results file
    final String resultsFileContent = """
// This file was generated by a generator for the CMI architecture.
// Delete this file if you don't want it.
// For suggestions, make a request on github.
// Share, like and follow https://github.com/UTOQINGAPP/Arquitectura-CMI.git

""";
    await generateFile(
        path: '$lib',
        fileName: 'result_arquitecture_cmi_generators.dart',
        fileContent: resultsFileContent);
  }
}
